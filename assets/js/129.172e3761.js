(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{433:function(s,a,t){"use strict";t.r(a);var e=t(12),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"选择与循环语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择与循环语句"}},[s._v("#")]),s._v(" 选择与循环语句")]),s._v(" "),t("h2",{attrs:{id:"选择语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择语句"}},[s._v("#")]),s._v(" 选择语句")]),s._v(" "),t("h3",{attrs:{id:"if语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[s._v("#")]),s._v(" if语句")]),s._v(" "),t("p",[s._v("一个if语句包含一个布尔表达式和一条或多条执行语句。")]),s._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("布尔表达式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果布尔表达式为true将执行的语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("如果布尔表达式的值为true，则执行if语句中的代码块，否则执行if语句块后面的代码。")]),s._v(" "),t("h3",{attrs:{id:"if-else语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-else语句"}},[s._v("#")]),s._v(" if...else语句")]),s._v(" "),t("p",[s._v("if语句后面可以跟else语句，当if语句的布尔表达式值为false时，else语句块会被执行。")]),s._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("布尔表达式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果布尔表达式为true将执行的语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果布尔表达式为false将执行的语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"if-else-if-else语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-else-if-else语句"}},[s._v("#")]),s._v(" if...else if...else语句")]),s._v(" "),t("p",[s._v("if语句后面可以跟else if...else语句，这种语句可以检测到多种可能的情况。使用该语句的时候，需要注意：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("if语句最多有1个else语句，else语句在所有的else if语句之后。")])]),s._v(" "),t("li",[t("p",[s._v("if语句可以有若干个else if语句，它们必须在else语句之前。")])]),s._v(" "),t("li",[t("p",[s._v("一旦其中一个else if语句检测为true，其他的else if以及else语句都将跳过执行。")])])]),s._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("布尔表达式"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果布尔表达式1为true将执行的语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("布尔表达式"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果布尔表达式2为true将执行的语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("布尔表达式"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果布尔表达式3为true将执行的语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果以上布尔表达式都不为true将执行的语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h3",{attrs:{id:"switch语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#switch语句"}},[s._v("#")]),s._v(" switch语句")]),s._v(" "),t("p",[s._v("switch语句判断一个变量与一系列值中某个值是否相等，每个值称为一个分支。")]),s._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" val1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可选")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" val2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可选")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可选")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("switch语句有以下规则：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("switch语句中的变量类型可以是：byte、short、int、char、枚举类。从Java7开始支持String类型，并且case标签的值必须是字符串常量或者字面常量。")])]),s._v(" "),t("li",[t("p",[s._v("switch与剧中可以拥有多个case语句。每个case后面跟一个要比较的值和冒号。")])]),s._v(" "),t("li",[t("p",[s._v("case语句中的值的数据类型必须与变量的数据类型相同，而且只能是常量或者字面常量。")])]),s._v(" "),t("li",[t("p",[s._v("当变量的值与case语句的值相等时，那么case语句之后的语句开始执行，知道break语句出现才会跳出switch语句。")])]),s._v(" "),t("li",[t("p",[s._v("当遇到break语句时，switch语句终止。程序跳转到switch语句后面的语句执行。case语句不必包含break语句。如果没有break语句出现，程序会继续执行下一条case语句，直到出现break语句。")])]),s._v(" "),t("li",[t("p",[s._v("switch语句可以包含一个default分支，该分支必须是switch语句的最后一个分支。default在没有case语句的值和变量值相等的时候执行。default分支不需要break语句。")])])]),s._v(" "),t("h2",{attrs:{id:"循环语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[s._v("#")]),s._v(" 循环语句")]),s._v(" "),t("p",[s._v("循环语句用于同样的操作需要执行多次的情况。Java中有三种主要的循环结构。")]),s._v(" "),t("h3",{attrs:{id:"while循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#while循环"}},[s._v("#")]),s._v(" while循环")]),s._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("布尔表达式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 循环执行的语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("只要布尔表达式为true，循环就会一直执行下去。")]),s._v(" "),t("h3",{attrs:{id:"do-while循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#do-while循环"}},[s._v("#")]),s._v(" do...while循环")]),s._v(" "),t("p",[s._v("对于while语句而言，如果不满足条件是不能进入循环的。但有时候我们需要在即使不满足条件时也至少执行一次，这时就需要使用do...while循环。")]),s._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("布尔表达式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("布尔表达式在循环体的后面，所以语句块在检测布尔表达式之前已经执行了。如果布尔表达式的值为true，则语句块一直执行，知道布尔表达式的值为false。")]),s._v(" "),t("h3",{attrs:{id:"for循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[s._v("#")]),s._v(" for循环")]),s._v(" "),t("p",[s._v("for循环执行的次数是在执行前就确定的。")]),s._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("初始化语句"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 布尔表达式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 更新语句"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 循环执行语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("使用for循环时，有以下几点需要说明：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("最先执行初始化语句。可以声明一种类型，可以初始化一个或多个循环控制变量，也可以时空语句。")])]),s._v(" "),t("li",[t("p",[s._v("随后，检查布尔表达式的值。为true，执行循环体；为false，循环终止，开始执行for代码块后面的语句。")])]),s._v(" "),t("li",[t("p",[s._v("执行一次循环后，在更新语句中更新循环控制变量。")])]),s._v(" "),t("li",[t("p",[s._v("更新语句执行后，再次检测布尔表达式。循环执行上面的过程。")])])]),s._v(" "),t("h3",{attrs:{id:"break关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#break关键字"}},[s._v("#")]),s._v(" break关键字")]),s._v(" "),t("p",[s._v("break主要用在循环语句或者switch语句中，用来跳出整个语句块。break跳出最里层的循环，并且继续执行循环语句块后面的语句。")]),s._v(" "),t("h3",{attrs:{id:"continue关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#continue关键字"}},[s._v("#")]),s._v(" continue关键字")]),s._v(" "),t("p",[s._v("continue适用于任何循环控制结构中。作用时让程序立刻跳转到下一次循环的迭代。")]),s._v(" "),t("p",[s._v("在for循环中，continue语句使程序立即跳转到更新语句。在while或者do...while循环中，程序立即跳转到布尔表达式的判断语句。")])])}),[],!1,null,null,null);a.default=n.exports}}]);