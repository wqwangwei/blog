(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{407:function(t,r,a){"use strict";a.r(r);var e=a(12),n=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"thread"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#thread"}},[t._v("#")]),t._v(" Thread")]),t._v(" "),a("p",[t._v("线程的实现方式之一，继承Thread类。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("java.lang")]),t._v("包中定义，继承Thread类必须重写run()方法。")]),t._v(" "),a("p",[t._v("创建好了自定义的线程类之后，就可以创建线程对象了，然后通过start()方法去启动线程。注意，不是调用run()方法启动线程，run()方法中只是定义需要执行的任务，如果调用run()方法，即相当于在主线程中执行run()方法，跟普通的方法调用没有任何区别，此时并不会创建一个新的线程来执行定义的任务。新线程创建的过程不会阻塞主线程的后续执行。")])])}),[],!1,null,null,null);r.default=n.exports}}]);