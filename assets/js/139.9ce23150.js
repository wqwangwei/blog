(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{422:function(t,s,a){"use strict";a.r(s);var r=a(12),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"list相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list相关"}},[t._v("#")]),t._v(" List相关")]),t._v(" "),a("h2",{attrs:{id:"类图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类图"}},[t._v("#")]),t._v(" 类图")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/List%E7%9B%B8%E5%85%B3/List%E7%B1%BB%E5%9B%BE.png",alt:"List类图"}})]),t._v(" "),a("p",[t._v("List接口继承Collection接口，List集合代表一个元素有序、可重复的集合，集合中每个元素都有其对应的顺序索引。List集合允许加入重复元素，因为它可以通过索引来访问指定位置的集合元素。List集合默认按元素的添加顺序设置元素的索引。")]),t._v(" "),a("h2",{attrs:{id:"list实现类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list实现类"}},[t._v("#")]),t._v(" List实现类")]),t._v(" "),a("h3",{attrs:{id:"arraylist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arraylist"}},[t._v("#")]),t._v(" ArrayList")]),t._v(" "),a("p",[t._v("ArrayList时基于数组实现的List类，它封装了一个可以动态扩容的数组。详情见"),a("RouterLink",{attrs:{to:"/dev/java/sourcecode/"}},[t._v("ArrayList源码分析")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"linkedlist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[t._v("#")]),t._v(" LinkedList")]),t._v(" "),a("p",[t._v("LinkedList实现了List和Deque接口，具备列表和双端队列的一些特性。详情见"),a("RouterLink",{attrs:{to:"/dev/java/sourcecode/LinkedList.html"}},[t._v("LinkedList源码分析")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"vector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vector"}},[t._v("#")]),t._v(" Vector")]),t._v(" "),a("p",[t._v('Vector和ArrayList在用法上几乎完全相同，并且Vector时线程安全的。Stack是Vector的一个子类，实现了"栈"这种数据接口，栈的特性是LIFO后进先出。')])])}),[],!1,null,null,null);s.default=e.exports}}]);