(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{428:function(t,v,_){"use strict";_.r(v);var a=_(12),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"异常"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#异常"}},[t._v("#")]),t._v(" 异常")]),t._v(" "),_("p",[t._v("异常是程序中的一些错误，但并不是所有的错误都是异常，并且错误有时候是可以避免的。")]),t._v(" "),_("p",[t._v("异常发生的原因由很多，通常包含以下几类：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("用户输入了非法数据。")])]),t._v(" "),_("li",[_("p",[t._v("要打开的文件不存在。")])]),t._v(" "),_("li",[_("p",[t._v("网络通信时连接中断，或者JVM内存溢出。")])])]),t._v(" "),_("p",[t._v("这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。要理解Java异常处理是如何工作的，需要掌握以下三种类型的异常：")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("检查性异常")]),t._v("：最具代表的检查性异常是用户的错误或问题引起的异常，这是程序员无法预见的。例如要打开一个不存在的文件是，一个异常就发生了，这些异常在编译时不能被简单地忽略。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("运行时异常")]),t._v("：运行时异常是可能被程序员避免的异常。与检查性异常相反，运行时异常可以在编译时被忽略。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("错误")]),t._v("：错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略。例如，当栈溢出时，一个错误就发生了，它们在编译时是检查不到的。")])])]),t._v(" "),_("p",[t._v("图中红色部分为受检查异常。它们必须被捕获，或者在方法中声明为抛出该异常。")]),t._v(" "),_("p",[_("img",{attrs:{src:"/images/Java%E5%BC%82%E5%B8%B8/Java%E5%BC%82%E5%B8%B8%E7%B1%BB.png",alt:"Java异常类"}})])])}),[],!1,null,null,null);v.default=s.exports}}]);