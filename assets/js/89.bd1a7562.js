(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{492:function(e,a,s){"use strict";s.r(a);var r=s(12),t=Object(r.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"dockerfile指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile指令"}},[e._v("#")]),e._v(" Dockerfile指令")]),e._v(" "),s("blockquote",[s("p",[e._v("引用自"),s("a",{attrs:{href:"http://www.itmuch.com/docker/07-docker-docker-file/",target:"_blank",rel:"noopener noreferrer"}},[e._v("《Docker系列教程07-Dockerfile指令详解》- 周立"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("Dockerfile有十多个指令。本节我们来系统讲解这些指令，指令的一般格式为 "),s("code",[e._v("指令名称 参数")]),e._v("。")]),e._v(" "),s("h2",{attrs:{id:"add-复制文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-复制文件"}},[e._v("#")]),e._v(" ADD 复制文件")]),e._v(" "),s("p",[e._v("ADD指令用于复制文件，格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ADD <src>... <dest>")])]),e._v(" "),s("li",[s("code",[e._v('ADD ["<src>",... "<dest>"]')])])]),e._v(" "),s("p",[e._v("从src目录复制文件到容器的dest。其中src可以是Dockerfile所在目录的相对路径，也可以是一个URL，还可以是一个压缩包")]),e._v(" "),s("p",[s("strong",[e._v("注意：")])]),e._v(" "),s("p",[e._v("① src必须在构建的上下文内，不能使用例如："),s("code",[e._v("ADD ../somethine /something")]),e._v(" 这样的命令，因为 "),s("code",[e._v("docker build")]),e._v(" 命令首先会将上下文路径和其子目录发送到docker daemon。")]),e._v(" "),s("p",[e._v("② 如果src是一个URL，同时dest不以斜杠结尾，dest将会被视为文件，src对应内容文件将会被下载到dest。")]),e._v(" "),s("p",[e._v("③ 如果src是一个URL，同时dest以斜杠结尾，dest将被视为目录，src对应内容将会被下载到dest目录。")]),e._v(" "),s("p",[e._v("④ 如果src是一个目录，那么整个目录下的内容将会被拷贝，包括文件系统元数据。")]),e._v(" "),s("p",[e._v("⑤ 如果文件是可识别的压缩包格式，则docker会自动解压。")]),e._v(" "),s("p",[e._v("示例：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ADD")]),e._v(" microservice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("discovery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("eureka"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("0.0.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("SNAPSHOT.jar app.jar\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"arg-设置构建参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arg-设置构建参数"}},[e._v("#")]),e._v(" ARG 设置构建参数")]),e._v(" "),s("p",[e._v("ARG指令用于设置构建参数，类似于ENV。和ARG不同的是，ARG设置的是构建时的环境变量，在容器运行时是不会存在这些变量的。")]),e._v(" "),s("p",[e._v("格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ARG <name>[=<default value>]")])])]),e._v(" "),s("p",[e._v("示例：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v(" user1=someuser\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("详细介绍文档："),s("a",{attrs:{href:"https://www.centos.bz/2016/12/dockerfile-arg-instruction/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.centos.bz/2016/12/dockerfile-arg-instruction/"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"cmd-容器启动命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmd-容器启动命令"}},[e._v("#")]),e._v(" CMD 容器启动命令")]),e._v(" "),s("p",[e._v("CMD指令用于为执行容器提供默认值。每个Dockerfile只有一个CMD命令，如果指定了多个CMD命令，那么只有最后一条会被执行，如果启动容器的时候指定了运行的命令，则会覆盖掉CMD指定的命令。")]),e._v(" "),s("p",[e._v("支持三种格式：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v('CMD ["executable","param1","param2"] (推荐使用)')])]),e._v(" "),s("li",[s("code",[e._v('CMD ["param1","param2"] (为ENTRYPOINT指令提供预设参数)')])]),e._v(" "),s("li",[s("code",[e._v("CMD command param1 param2 (在shell中执行)")])])]),e._v(" "),s("p",[e._v("示例：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CMD")]),e._v(" echo "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"This is a test."')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),e._v(" wc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"copy-复制文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copy-复制文件"}},[e._v("#")]),e._v(" COPY 复制文件")]),e._v(" "),s("p",[e._v("复制文件，格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("COPY <src>... <dest>")])]),e._v(" "),s("li",[s("code",[e._v('COPY ["<src>",... "<dest>"]')])])]),e._v(" "),s("p",[e._v("复制本地端的src到容器的dest。COPY指令和ADD指令类似，COPY不支持URL和压缩包。")]),e._v(" "),s("h2",{attrs:{id:"entrypoint-入口点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint-入口点"}},[e._v("#")]),e._v(" ENTRYPOINT 入口点")]),e._v(" "),s("p",[e._v("格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v('ENTRYPOINT ["executable", "param1", "param2"]')])]),e._v(" "),s("li",[s("code",[e._v("ENTRYPOINT command param1 param2")])])]),e._v(" "),s("p",[e._v("ENTRYPOINT和CMD指令的目的一样，都是指定Docker容器启动时执行的命令，可多次设置，但只有最后一个有效。ENTRYPOINT不可被重写覆盖。")]),e._v(" "),s("p",[e._v("ENTRYPOINT、CMD区别："),s("a",{attrs:{href:"http://blog.csdn.net/newjueqi/article/details/51355510",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://blog.csdn.net/newjueqi/article/details/51355510"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"env-设置环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#env-设置环境变量"}},[e._v("#")]),e._v(" ENV 设置环境变量")]),e._v(" "),s("p",[e._v("ENV指令用于设置环境变量，格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ENV <key> <value>")])]),e._v(" "),s("li",[s("code",[e._v("ENV <key>=<value> ...")])])]),e._v(" "),s("p",[e._v("示例：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ENV")]),e._v(" JAVA_HOME /path/to/java\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"expose-声明暴露的端口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expose-声明暴露的端口"}},[e._v("#")]),e._v(" EXPOSE 声明暴露的端口")]),e._v(" "),s("p",[e._v("EXPOSE指令用于声明在运行时容器提供服务的端口，格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("EXPOSE <port> [<port>...]")])])]),e._v(" "),s("p",[e._v("需要注意的是，这只是一个声明，运行时并不会因为该声明就打开相应端口。该指令的作用主要是帮助镜像使用者理解该镜像服务的守护端口；其次是当运行时使用随机映射时，会自动映射EXPOSE的端口。示例：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 声明暴露一个端口示例\nEXPOSE port1\n# 相应的运行容器使用的命令\ndocker run -p port1 image\n# 也可使用-P选项启动\ndocker run -P image\n# 声明暴露多个端口示例\nEXPOSE port1 port2 port3\n# 相应的运行容器使用的命令\ndocker run -p port1 -p port2 -p port3 image\n# 也可指定需要映射到宿主机器上的端口号  \ndocker run -p host_port1:port1 -p host_port2:port2 -p host_port3:port3 image\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("h2",{attrs:{id:"from-指定基础镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#from-指定基础镜像"}},[e._v("#")]),e._v(" FROM 指定基础镜像")]),e._v(" "),s("p",[e._v("使用FROM指令指定基础镜像，FROM指令有点像Java里面的“extends”关键字。需要注意的是，FROM指令必须指定且需要写在其他指令之前。FROM指令后的所有指令都依赖于该指令所指定的镜像。")]),e._v(" "),s("p",[e._v("支持三种格式：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("FROM <image>")])]),e._v(" "),s("li",[s("code",[e._v("FROM <image>:<tag>")])]),e._v(" "),s("li",[s("code",[e._v("FROM <image>@<digest>")])])]),e._v(" "),s("h2",{attrs:{id:"label-为镜像添加元数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#label-为镜像添加元数据"}},[e._v("#")]),e._v(" LABEL 为镜像添加元数据")]),e._v(" "),s("p",[e._v("LABEL指令用于为镜像添加元数据。")]),e._v(" "),s("p",[e._v("格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("LABEL <key>=<value> <key>=<value> <key>=<value> ...")])])]),e._v(" "),s("p",[e._v("使用 "),s("code",[e._v('"')]),e._v(" 和 "),s("code",[e._v("\\")]),e._v(" 转换命令行，示例：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("LABEL")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"com.example.vendor"')]),e._v("="),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"ACME Incorporated"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("LABEL")]),e._v(" com.example.label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("with"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("value="),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"foo"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("LABEL")]),e._v(" version="),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1.0"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("LABEL")]),e._v(" description="),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"This text illustrates \\\nthat label-values can span multiple lines."')]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h2",{attrs:{id:"maintainer-指定维护者的信息（已过时）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maintainer-指定维护者的信息（已过时）"}},[e._v("#")]),e._v(" MAINTAINER 指定维护者的信息（已过时）")]),e._v(" "),s("p",[e._v("MAINTAINER指令用于指定维护者的信息，用于为Dockerfile署名。")]),e._v(" "),s("p",[e._v("格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("MAINTAINER <name>")])])]),e._v(" "),s("p",[e._v("示例：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("MAINTAINER")]),e._v(" 周立<eacdy0000@126.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("注：该指令已过时，建议使用如下形式：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("LABEL")]),e._v(" maintainer="),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"SvenDowideit@home.org.au"')]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"run-执行命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-执行命令"}},[e._v("#")]),e._v(" RUN 执行命令")]),e._v(" "),s("p",[e._v("该指令支持两种格式：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("RUN <command>")])]),e._v(" "),s("li",[s("code",[e._v('RUN ["executable", "param1", "param2"]')])])]),e._v(" "),s("p",[s("code",[e._v("RUN <command>")]),e._v(" 在shell终端中运行，在Linux中默认是 "),s("code",[e._v("/bin/sh -c")]),e._v(" ，在Windows中是 "),s("code",[e._v("cmd /s /c")]),e._v(" ，使用这种格式，就像直接在命令行中输入命令一样。\n"),s("code",[e._v('RUN ["executable", "param1", "param2"]')]),e._v(" 使用exec执行，这种方式类似于函数调用。指定其他终端可以通过该方式操作，例如："),s("code",[e._v('RUN ["/bin/bash", "-c", "echo hello"]')]),e._v(" ，该方式必须使用双引号[“]而不能使用单引号[‘]，因为该方式会被转换成一个JSON 数组。")]),e._v(" "),s("h2",{attrs:{id:"user-设置用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#user-设置用户"}},[e._v("#")]),e._v(" USER 设置用户")]),e._v(" "),s("p",[e._v("该指令用于设置启动镜像时的用户或者UID，写在该指令后的RUN、CMD以及ENTRYPOINT指令都将使用该用户执行命令。")]),e._v(" "),s("p",[e._v("格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("USER 用户名")])])]),e._v(" "),s("p",[e._v("示例：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("USER")]),e._v(" daemon\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"volume-指定挂载点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volume-指定挂载点"}},[e._v("#")]),e._v(" VOLUME 指定挂载点")]),e._v(" "),s("p",[e._v("该指令使容器中的一个目录具有持久化存储的功能，该目录可被容器本身使用，也可共享给其他容器。当容器中的应用有持久化数据的需求时可以在Dockerfile中使用该指令。")]),e._v(" "),s("p",[e._v("格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v('VOLUME ["/data"]')])])]),e._v(" "),s("p",[e._v("示例：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("VOLUME")]),e._v(" /data\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("使用示例：")]),e._v(" "),s("div",{staticClass:"language-Dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" nginx\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("VOLUME")]),e._v(" /tmp\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("当该Dockerfile被构建成镜像后，/tmp目录中的数据即使容器关闭也依然存在。如果另一个容器也有持久化的需求，并且想使用以上容器/tmp目录中的内容，则可使用如下命令启动容器：")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("docker run -volume-from 容器ID 镜像名称  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 容器ID是di一个容器的ID，镜像是第二个容器所使用的镜像。")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"workdir-指定工作目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workdir-指定工作目录"}},[e._v("#")]),e._v(" WORKDIR 指定工作目录")]),e._v(" "),s("p",[e._v("格式为：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("WORKDIR /path/to/workdir")])])]),e._v(" "),s("p",[e._v("切换目录指令，类似于cd命令，写在该指令后的RUN，CMD以及ENTRYPOINT指令都将该目录作为当前目录，并执行相应的命令。")]),e._v(" "),s("h2",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[e._v("#")]),e._v(" 其他")]),e._v(" "),s("p",[e._v("Dockerfile还有一些其他的指令，例如STOPSINGAL、HEALTHCHECK、SHELL等。由于并不是很常用，本书不作赘述。有兴趣的读者可前往"),s("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/engine/reference/builder/"),s("OutboundLink")],1),e._v(" 扩展阅读。")]),e._v(" "),s("h2",{attrs:{id:"cmd-entrypoint-run区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmd-entrypoint-run区别"}},[e._v("#")]),e._v(" CMD/ENTRYPOINT/RUN区别")]),e._v(" "),s("p",[e._v("参考："),s("a",{attrs:{href:"https://segmentfault.com/q/1010000000417103",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://segmentfault.com/q/1010000000417103"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("strong",[e._v("拓展阅读")])]),e._v(" "),s("p",[e._v("Dockerfile官方文档："),s("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#dockerfile-reference",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/engine/reference/builder/#dockerfile-reference"),s("OutboundLink")],1),e._v("\nDockerfile最佳实践："),s("a",{attrs:{href:"https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#build-cache",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#build-cache"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=t.exports}}]);